{"version":3,"file":"static/js/423.bc225eff.chunk.js","mappings":"oIACA,MAeA,EAfkBA,IAA+B,IAA9B,MAAEC,KAAUC,GAAYF,EACzC,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,gBAAiBF,KAClCI,EAAAA,EAAAA,KAAA,SACEF,UAAS,GAAAG,OACPL,EAAWM,MAAMC,OAAS,SAAW,GAAE,qBACrBJ,SAEnBJ,MAEC,C,6GCFV,MAAMS,EACD,CACDC,MAAO,MACPC,QAAS,0SAHPF,EAKD,CAAEC,MAAO,MAAOC,QAAS,yJALxBF,EAMD,CAAEC,MAAO,MAAOC,QAAS,6KAExBC,EAAoB,CACxBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IA8FnB,EA3FmBC,KACjB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAASR,IACvC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,EAAQ,gBAAEC,GAAoBE,GACnDG,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAoCrCK,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEpB,GAAUmB,EAAME,OAC9BT,EAAc,IAAKD,EAAY,CAACS,GAAOpB,GAAQ,EAEjD,OACEL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8GACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sLACNF,EAAAA,EAAAA,MAAA,QAAM2B,SAtCWC,UAEnB,GADAJ,EAAMK,iBACFhB,IAAaC,EAGf,OAFAM,EAASb,QACTe,GAAa,GAGf,IACE,MAAM,KAAEQ,SAAeC,EAAAA,EAAAA,IACrBnB,EACAC,SAEImB,EAAAA,EAAAA,IAA2BF,EAAM,CAAEnB,gBAf3CM,EAAcP,EAiBd,CAAE,MAAOS,GACY,8BAAfA,EAAMc,MACRb,EAASb,GACTe,GAAa,IACW,uBAAfH,EAAMc,OACfb,EAASb,GACTe,GAAa,IAEfY,QAAQC,IAAI,qCAAsChB,EACpD,CACAiB,YAAW,KACTd,GAAa,GACbF,EAAS,KAAK,GACb,IAAK,EAWuBlB,SAAA,EAC3BC,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRvC,MAAM,0DACNwC,KAAK,OACLb,KAAK,cACLc,UAAQ,EACRC,SAAUjB,EACVlB,MAAOM,KAGTR,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRvC,MAAM,iCACNwC,KAAK,QACLb,KAAK,QACLc,UAAQ,EACRC,SAAUjB,EACVlB,MAAOO,KAGTT,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRvC,MAAM,8CACNwC,KAAK,WACLb,KAAK,WACLc,UAAQ,EACRC,SAAUjB,EACVlB,MAAOQ,KAGTV,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRvC,MAAM,6EACNwC,KAAK,WACLb,KAAK,kBACLc,UAAQ,EACRC,SAAUjB,EACVlB,MAAOS,KAETX,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CAACH,KAAK,SAAQpC,SAAC,0CACrBmB,IAAalB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAAClC,MAAOW,EAAMX,MAAOC,QAASU,EAAMV,eAEtD,ECrGJC,EAAoB,CACxBE,MAAO,GACPC,SAAU,IAENN,EACD,CAAEC,MAAO,MAAOC,QAAS,yLADxBF,EAED,CAAEC,MAAO,MAAOC,QAAS,oHAFxBF,EAGD,CAAEC,MAAO,MAAOC,QAAS,8EAHxBF,EAID,CAAEC,MAAO,MAAOC,QAAS,0LAJxBF,EAKD,CAAEC,MAAO,MAAOC,QAAS,oFALxBF,EAMD,CACDC,MAAO,QACPC,QAAS,2VARPF,EAUD,CACDC,MAAO,MACPC,QACE,kdAwHN,EApHmBkC,KACjB,MAAO3B,EAAYC,IAAiBC,EAAAA,EAAAA,UAASR,IACvC,MAAEE,EAAK,SAAEC,GAAaG,GACrBG,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAiCrC0B,EAAmBpB,IACvB,MAAM,KAAEC,EAAI,MAAEpB,GAAUmB,EAAME,OAC9BT,EAAc,IAAKD,EAAY,CAACS,GAAOpB,GAAQ,EAwCjD,OACEL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wIACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,yKACNF,EAAAA,EAAAA,MAAA,QAAM2B,SA7BWC,UACnBJ,EAAMK,iBACN,UACQgB,EAAAA,EAAAA,IAAmCjC,EAAOC,GANlDI,EAAcP,EAQd,CAAE,MAAOS,GACY,wBAAfA,EAAMc,OACRb,EAASb,GACTe,GAAa,IAEI,wBAAfH,EAAMc,OACRb,EAASb,GACTe,GAAa,IAEI,2BAAfH,EAAMc,OACRb,EAASb,GACTe,GAAa,IAEfY,QAAQC,IAAI,mBAAoBhB,EAAMV,QACxC,CACA2B,YAAW,KACTd,GAAa,GACbF,EAAS,KAAK,GACb,IAAK,EAMuBlB,SAAA,EAC3BC,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRvC,MAAM,iCACNwC,KAAK,QACLb,KAAK,QACLc,UAAQ,EACRC,SAAUI,EACVvC,MAAOO,KAETT,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,CACRvC,MAAM,8CACNwC,KAAK,WACLb,KAAK,WACLc,UAAQ,EACRC,SAAUI,EACVvC,MAAOQ,KAGTb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CAACH,KAAK,SAAQpC,SAAC,8BACtBC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CAACH,KAAK,SAASQ,QA7DLlB,UACvB,UACQmB,EAAAA,EAAAA,KACR,CAAE,MAAO5B,GACPe,QAAQC,IAAI,+BAAgChB,EAAMV,QACpD,GAwDuDuC,WAAW,SAAQ9C,SAAC,kIAKzEC,EAAAA,EAAAA,KAAA,QAAM2C,QAtGmBlB,UAC3B,UACQqB,EAAAA,EAAAA,IAAcrC,GACpBQ,EAASb,GACTe,GAAa,EACf,CAAE,MAAOH,GACP,OAAQA,EAAMc,MACZ,IAAK,qBACHb,EAASb,GACTe,GAAa,GACb,MACF,IAAK,qBACHF,EAASb,GACTe,GAAa,GACb,MACF,IAAK,sBACHF,EAASb,GACTe,GAAa,GACb,MACF,QACEF,EAASb,GACTe,GAAa,GAEjBc,YAAW,KACTd,GAAa,GACbF,EAAS,KAAK,GACb,KACHc,QAAQC,IAAIhB,EAAMV,QACpB,GA0EuCR,UAAU,cAAaC,SAAC,oJAG5DmB,IAAalB,EAAAA,EAAAA,KAACuC,EAAAA,EAAK,CAAClC,MAAOW,EAAMX,MAAOC,QAASU,EAAMV,YACpD,E,eC9IH,MAAMyC,E,QAA0BC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gzB,iCCMjD,MAgBA,EAhBuBC,KACrB,MAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,GAC1BC,GAAWC,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,KACJL,GACFG,EAAS,IACX,GACC,CAACH,EAAcG,KAEhB3D,EAAAA,EAAAA,MAACkD,EAAuB,CAAAhD,SAAA,EACtBC,EAAAA,EAAAA,KAACwC,EAAU,KACXxC,EAAAA,EAAAA,KAACY,EAAU,MACa,C","sources":["components/form-input/form-input.component.jsx","components/sign-up-form/sign-up-form.component.jsx","components/sign-in-form/sign-in-form.component.jsx","routes/authentication/authentication.styles.jsx","routes/authentication/authentication.component.jsx"],"sourcesContent":["import \"./form-input.styles.scss\";\nconst FormInput = ({ label, ...otherProps }) => {\n  return (\n    <div className=\"group\">\n      <input className=\"form-input\" {...otherProps} />\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default FormInput;\n","import { useState } from \"react\";\nimport {\n  createUserDocumentFromAuth,\n  createAuthUserFromEmailAndPassword,\n} from \"../../utils/firebase/firebase.utils\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./sign-up-form.styles.scss\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../additional-components/toast/toast.component\";\n\nconst statusMessages = {\n  1: {\n    color: \"red\",\n    message: \"ایمیل از قبل در حال استفاده است. لطفا ایمیل دیگری وارد کنید\",\n  },\n  2: { color: \"red\", message: \"هر دو کلمه عبور مطابقت ندارند\" },\n  3: { color: \"red\", message: \"رمز عبور باید حداقل 6 کاراکتر باشد\" },\n};\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst SignUpForm = () => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { displayName, email, password, confirmPassword } = formFields;\n  const [error, setError] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setError(statusMessages[2]);\n      setShowAlert(true);\n      return;\n    }\n    try {\n      const { user } = await createAuthUserFromEmailAndPassword(\n        email,\n        password\n      );\n      await createUserDocumentFromAuth(user, { displayName });\n      resetFormFields();\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        setError(statusMessages[1]);\n        setShowAlert(true);\n      } else if (error.code === \"auth/weak-password\") {\n        setError(statusMessages[3]);\n        setShowAlert(true);\n      }\n      console.log(\"User creation encountered an error\", error);\n    }\n    setTimeout(() => {\n      setShowAlert(false);\n      setError(null);\n    }, 5000);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n  return (\n    <div className=\"sign-up-container\">\n      <h2>حساب کاربری ندارید؟</h2>\n      <span>با ایمیل و رمز عبور خود ثبت نام کنید</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"نام کاربری\"\n          type=\"text\"\n          name=\"displayName\"\n          required\n          onChange={handleChange}\n          value={displayName}\n        />\n\n        <FormInput\n          label=\"ایمیل\"\n          type=\"email\"\n          name=\"email\"\n          required\n          onChange={handleChange}\n          value={email}\n        />\n\n        <FormInput\n          label=\"رمز عبور\"\n          type=\"password\"\n          name=\"password\"\n          required\n          onChange={handleChange}\n          value={password}\n        />\n\n        <FormInput\n          label=\"تکرار رمز عبور\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          required\n          onChange={handleChange}\n          value={confirmPassword}\n        />\n        <Button type=\"submit\">ثبت نام</Button>\n        {showAlert && <Toast color={error.color} message={error.message} />}\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import \"./sign-in-form.styles.scss\";\nimport Button from \"../button/button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport {\n  signInWithGooglePopup,\n  signInAuthUserFromEmailAndPassword,\n  passwordReset,\n} from \"../../utils/firebase/firebase.utils\";\nimport { useState } from \"react\";\nimport Toast from \"../additional-components/toast/toast.component\";\n\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\",\n};\nconst statusMessages = {\n  1: { color: \"red\", message: \"لطفا آدرس اییمیل خود را وارد نمایید.\" },\n  2: { color: \"red\", message: \"آدرس ایمیل معتبر نیست.\" },\n  3: { color: \"red\", message: \"کاربر پیدا نشد\" },\n  4: { color: \"red\", message: \"مشکلی پیش آمد. لطفا دوباره تلاش کنید.\" },\n  5: { color: \"red\", message: \"رمز عبور نادرست\" },\n  6: {\n    color: \"green\",\n    message: \"ایمیل بازنشانی رمز عبور ارسال شد. لطفا صندوق ورودی خود را بررسی کنید\",\n  },\n  7: {\n    color: \"red\",\n    message:\n      \"تلاش های ناموفق بسیار زیاد. لطفاً بعداً دوباره امتحان کنید یا رمز عبور خود را بازنشانی کنید.\",\n  },\n};\n\nconst SignInForm = () => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { email, password } = formFields;\n  const [error, setError] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleForgotPassword = async () => {\n    try {\n      await passwordReset(email);\n      setError(statusMessages[6]);\n      setShowAlert(true);\n    } catch (error) {\n      switch (error.code) {\n        case \"auth/missing-email\":\n          setError(statusMessages[1]);\n          setShowAlert(true);\n          break;\n        case \"auth/invalid-email\":\n          setError(statusMessages[2]);\n          setShowAlert(true);\n          break;\n        case \"auth/user-not-found\":\n          setError(statusMessages[3]);\n          setShowAlert(true);\n          break;\n        default:\n          setError(statusMessages[4]);\n          setShowAlert(true);\n      }\n      setTimeout(() => {\n        setShowAlert(false);\n        setError(null);\n      }, 5000);\n      console.log(error.message);\n    }\n  };\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  const signInWithGoogle = async (event) => {\n    try {\n      await signInWithGooglePopup();\n    } catch (error) {\n      console.log(\"Error signing in with google\", error.message);\n    }\n  };\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await signInAuthUserFromEmailAndPassword(email, password);\n      resetFormFields();\n    } catch (error) {\n      if (error.code === \"auth/wrong-password\") {\n        setError(statusMessages[5]);\n        setShowAlert(true);\n      }\n      if (error.code === \"auth/user-not-found\") {\n        setError(statusMessages[3]);\n        setShowAlert(true);\n      }\n      if (error.code === \"auth/too-many-requests\") {\n        setError(statusMessages[7]);\n        setShowAlert(true);\n      }\n      console.log(\"Error signing in\", error.message);\n    }\n    setTimeout(() => {\n      setShowAlert(false);\n      setError(null);\n    }, 5000);\n  };\n  return (\n    <div className=\"sign-up-container\">\n      <h2>از قبل حساب کاربری دارید؟</h2>\n      <span>با ایمیل و رمز عبور خود وارد شوید</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"ایمیل\"\n          type=\"email\"\n          name=\"email\"\n          required\n          onChange={onChangeHandler}\n          value={email}\n        />\n        <FormInput\n          label=\"رمز عبور\"\n          type=\"password\"\n          name=\"password\"\n          required\n          onChange={onChangeHandler}\n          value={password}\n        />\n\n        <div className=\"buttons-container\">\n          <Button type=\"submit\">ورود</Button>\n          <Button type=\"button\" onClick={signInWithGoogle} buttonType=\"google\">\n            با اکانت گوگل وارد شوید\n          </Button>\n        </div>\n      </form>\n      <span onClick={handleForgotPassword} className=\"forgot-pass\">\n      رمز عبور را فراموش کرده اید؟\n      </span>\n      {showAlert && <Toast color={error.color} message={error.message} />}\n    </div>\n  );\n};\n\nexport default SignInForm;\n","import styled from \"styled-components\";\n\nexport const AuthenticationContainer = styled.div`\n  display: flex;\n  width: 900px;\n  justify-content: space-between;\n  margin: 50px auto 80px auto;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    width: 100%;\n    margin-bottom: 20px;\n  }\n\n  /* When the screen size is 768px or smaller */\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    width: 90%;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (max-width: 992px) {\n    flex-direction: column;\n    width: 80%;\n\n    & > * {\n      margin-bottom: 50px;\n      /* Add margin between components in column layout */\n    }\n  }\n\n  @media screen and (max-width: 1200px) {\n    flex-direction: column;\n    width: 70%;\n\n    & > * {\n      margin-bottom: 50px;\n      /* Add margin between components in column layout */\n    }\n  }\n`;\n","import SignUpForm from \"../../components/sign-up-form/sign-up-form.component\";\nimport SignInForm from \"../../components/sign-in-form/sign-in-form.component\";\nimport { AuthenticationContainer } from \"./authentication.styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux/es/hooks/useSelector\";\nimport { selectCurrentUser } from \"../../store/user/user.selector\";\nimport { useEffect } from \"react\";\n\nconst Authentication = () => {\n  const currentUser = useSelector(selectCurrentUser);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (currentUser) {\n      navigate(\"/\");\n    }\n  }, [currentUser , navigate]);\n  return (\n    <AuthenticationContainer>\n      <SignInForm />\n      <SignUpForm />\n    </AuthenticationContainer>\n  );\n};\n\nexport default Authentication;\n"],"names":["_ref","label","otherProps","_jsxs","className","children","_jsx","concat","value","length","statusMessages","color","message","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","formFields","setFormFields","useState","error","setError","showAlert","setShowAlert","handleChange","event","name","target","onSubmit","async","preventDefault","user","createAuthUserFromEmailAndPassword","createUserDocumentFromAuth","code","console","log","setTimeout","FormInput","type","required","onChange","Button","Toast","SignInForm","onChangeHandler","signInAuthUserFromEmailAndPassword","onClick","signInWithGooglePopup","buttonType","passwordReset","AuthenticationContainer","styled","div","_templateObject","_taggedTemplateLiteral","Authentication","currentUser","useSelector","selectCurrentUser","navigate","useNavigate","useEffect"],"sourceRoot":""}